/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { CubeCamera, useGLTF } from "@react-three/drei";
import React, { useEffect, useRef } from "react";
import { useConfigurator } from "../contexts/Configurator";

import { useFrame } from "@react-three/fiber";
import * as Three from "three";
import { Vector3 } from "three";

const ANIM_SPEED = 12;

export function Veranda(props) {
  const { nodes, materials } = useGLTF("./models/BasicVeranda8.glb");

    const { legs, aluminiumColor, verandaWidth, verandaDepth } = useConfigurator();
    
    const GootProfiel = useRef();
    const Huis = useRef();
    const leftLegs = useRef();
    const rightLegs = useRef();
    const Poly01 = useRef();
    const Poly02 = useRef();
    const Poly03 = useRef();
    const EindLiggerRechts = useRef();
    const EindLiggerLinks = useRef();
    const Ligger01 = useRef();
    const Ligger02 = useRef();
    const windowFrame = useRef();
    const rightWindowPanel = useRef();
    const leftWindowPanel = useRef();
    const midWindowPanel = useRef();
    
    var verandaWidthBase = 3
    // var DimensionWidthPolyPlate = 9.72
    // var legsLeftRightPositionX = 14.58
    var Poly04_posX = ((verandaWidth/verandaWidthBase-1)*-14.58) + 9.72
    var Poly05_posX = ((verandaWidth/verandaWidthBase-1)*-14.58) + 9.72 * 2
    var Poly06_posX = ((verandaWidth/verandaWidthBase-1)*-14.58) + 9.72 * 3
    var Poly07_posX = ((verandaWidth/verandaWidthBase-1)*-14.58) + 9.72 * 4
    var Poly08_posX = ((verandaWidth/verandaWidthBase-1)*-14.58) + 9.72 * 5
    var Ligger04_posX = 4.86 + ((verandaWidth/verandaWidthBase-1)*14.58) - 9.72
    var Ligger05_posX = 4.86 + ((verandaWidth/verandaWidthBase-1)*14.58) - 9.72 * 2
    var Ligger06_posX = 4.86 + ((verandaWidth/verandaWidthBase-1)*14.58) - 9.72 * 3
    var Ligger07_posX = 4.86 + ((verandaWidth/verandaWidthBase-1)*14.58) - 9.72 * 4
    var Ligger08_posX = 4.86 + ((verandaWidth/verandaWidthBase-1)*14.58) - 9.72 * 5
    var Window04_posX = 8.7 + ((verandaWidth/verandaWidthBase-1)*-14.58) + 9.40647
    var Window05_posX = 8.7 + ((verandaWidth/verandaWidthBase-1)*-14.58) + 9.40647 * 2
    var Window06_posX = 8.7 + ((verandaWidth/verandaWidthBase-1)*-14.58) + 9.40647 * 3

    useEffect(() => {
      materials.Aluminium.color = new Three.Color(aluminiumColor);
    }, [aluminiumColor]);
  
    useFrame((_state, delta) => {
      const verandaWidthScale = verandaWidth / verandaWidthBase;

      // GootProfiel Scaling
      const targetScale = new Vector3(0.73, 0.7, 14.76 * verandaWidthScale);
      GootProfiel.current.scale.lerp(targetScale, delta * ANIM_SPEED);
      
      // House scaling
      const HuisScale = new Vector3(17.5 * verandaWidthScale, 15, 15);
      Huis.current.scale.lerp(HuisScale, delta * ANIM_SPEED);

      // Legs positioning
      const targetLeftPosition = new Vector3(-14.58 * verandaWidthScale, 10, 0);
      leftLegs.current.position.lerp(targetLeftPosition, delta * ANIM_SPEED);
      const targetRightPosition = new Vector3(14.58 * verandaWidthScale, 10, 0);
      rightLegs.current.position.lerp(targetRightPosition, delta * ANIM_SPEED);

      // Poly positioning
      const Poly01Position = new Vector3(9.72 + ((verandaWidthScale-1)*14.58), 22.81, -12.83);
      Poly01.current.position.lerp(Poly01Position, delta * ANIM_SPEED);
      const Poly02Position = new Vector3( ((verandaWidthScale-1)*-14.58), 22.81, -12.83);
      Poly02.current.position.lerp(Poly02Position, delta * ANIM_SPEED);
      const Poly03Position = new Vector3(-9.72 + ((verandaWidthScale-1)*-14.58), 22.81, -12.83);
      Poly03.current.position.lerp(Poly03Position, delta * ANIM_SPEED);

      // Ligger positioning
      const EindLiggerRechtsPosition = new Vector3(14.58 + ((verandaWidthScale-1)*14.58), 21.76, -12.97);
      EindLiggerRechts.current.position.lerp(EindLiggerRechtsPosition, delta * ANIM_SPEED);
      const EindLiggerLinksPosition = new Vector3(-14.58 + ((verandaWidthScale-1)*-14.58), 21.76, -12.97);
      EindLiggerLinks.current.position.lerp(EindLiggerLinksPosition, delta * ANIM_SPEED);
      const Ligger01Position = new Vector3(4.86 + ((verandaWidthScale-1)*14.58), 21.76, -12.97);
      Ligger01.current.position.lerp(Ligger01Position, delta * ANIM_SPEED);
      const Ligger02Position = new Vector3(-4.82 + ((verandaWidthScale-1)*-14.58), 21.76, -12.97);
      Ligger02.current.position.lerp(Ligger02Position, delta * ANIM_SPEED);

      // Schuifpui frame Scaling
      const windowFramePosition = new Vector3(11.33 * verandaWidthScale, 9.01, 4.41);
      windowFrame.current.scale.lerp(windowFramePosition, delta * ANIM_SPEED);
      // Schuifpui schuiven
      // rightWindowPanel
      const rightWindowPanelPosition = new Vector3(8.7+ ((verandaWidthScale-1)*-14.58), 10.02, -0.38);
      rightWindowPanel.current.position.lerp(rightWindowPanelPosition, delta * ANIM_SPEED);
      const leftWindowPanelPosition = new Vector3(-8.7+ ((verandaWidthScale-1)*-14.58), 10.02, 0.17);
      leftWindowPanel.current.position.lerp(leftWindowPanelPosition, delta * ANIM_SPEED);
      const midWindowPanelPosition = new Vector3(0.02+ ((verandaWidthScale-1)*-14.58), 10.02, -0.12);
      midWindowPanel.current.position.lerp(midWindowPanelPosition, delta * ANIM_SPEED);
    });

    

  return (
<group {...props} dispose={null}>
<mesh
  castShadow
  receiveShadow
  geometry={nodes.GootProfiel.geometry}
  material={nodes.GootProfiel.material}
  position={[0, 20.7, 0]}
  rotation={[0, -Math.PI / 2, 0]}
  scale={[0.73, 0.7, 14.76]}
  ref={GootProfiel}
/>
<mesh
  castShadow
  receiveShadow
  geometry={nodes.Huis.geometry}
  material={nodes.Huis.material}
  position={[0, 15, -40.3]}
  scale={[17.5, 15, 15]}
  ref={Huis}
/>
<mesh
  castShadow
  receiveShadow
  geometry={nodes.PolyKanaalplaat01.geometry}
  material={materials["PolyCarbonatSheets.001"]}
  position={[9.72, 22.81, -12.83]}
  rotation={[0.14, 0, 0]}
  scale={[0.6, 0.04, 12.5]}
  ref={Poly01}
/>
<mesh
  castShadow
  receiveShadow
  geometry={nodes.PolyKanaalplaat02.geometry}
  material={materials["PolyCarbonatSheets.001"]}
  position={[0, 22.81, -12.83]}
  rotation={[0.14, 0, 0]}
  scale={[0.6, 0.04, 12.5]}
  ref={Poly02}
/>
{verandaWidth > 3 && (
  <>
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.PolyKanaalplaat02.geometry}
      material={materials["PolyCarbonatSheets.001"]}
      position={[Poly04_posX, 22.81, -12.83]}
      rotation={[0.14, 0, 0]}
      scale={[0.6, 0.04, 12.5]}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Ligger01.geometry}
      material={nodes.Ligger01.material}
      position={[Ligger04_posX, 21.76, -12.97]}
      rotation={[0.14, 0, 0]}
      scale={[0.18, 8.24, 12.47]}
    />
    <group position={[Window04_posX, 10.02, -0.38]} scale={[11.33, 9.29, 4.41]}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window_Panel013.geometry}
        material={nodes.Window_Panel013.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window_Panel013_1.geometry}
        material={materials.MaterialGlass}
      />
    </group>
  </>
)}
{verandaWidth > 4 && (
  <>
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.PolyKanaalplaat02.geometry}
      material={materials["PolyCarbonatSheets.001"]}
      position={[Poly05_posX, 22.81, -12.83]}
      rotation={[0.14, 0, 0]}
      scale={[0.6, 0.04, 12.5]}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Ligger01.geometry}
      material={nodes.Ligger01.material}
      position={[Ligger05_posX, 21.76, -12.97]}
      rotation={[0.14, 0, 0]}
      scale={[0.18, 8.24, 12.47]}
    />
    <group position={[Window05_posX, 10.02, -0.38]} scale={[11.33, 9.29, 4.41]}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window_Panel013.geometry}
        material={nodes.Window_Panel013.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window_Panel013_1.geometry}
        material={materials.MaterialGlass}
      />
    </group>
  </>
)}
{verandaWidth > 5 && (
  <>
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.PolyKanaalplaat02.geometry}
      material={materials["PolyCarbonatSheets.001"]}
      position={[Poly06_posX, 22.81, -12.83]}
      rotation={[0.14, 0, 0]}
      scale={[0.6, 0.04, 12.5]}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Ligger01.geometry}
      material={nodes.Ligger01.material}
      position={[Ligger06_posX, 21.76, -12.97]}
      rotation={[0.14, 0, 0]}
      scale={[0.18, 8.24, 12.47]}
    />
    <group position={[Window06_posX, 10.02, -0.38]} scale={[11.33, 9.29, 4.41]}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window_Panel013.geometry}
        material={nodes.Window_Panel013.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window_Panel013_1.geometry}
        material={materials.MaterialGlass}
      />
    </group>
  </>
)}
{verandaWidth > 6 && (
  <>
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.PolyKanaalplaat02.geometry}
      material={materials["PolyCarbonatSheets.001"]}
      position={[Poly07_posX, 22.81, -12.83]}
      rotation={[0.14, 0, 0]}
      scale={[0.6, 0.04, 12.5]}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Ligger01.geometry}
      material={nodes.Ligger01.material}
      position={[Ligger07_posX, 21.76, -12.97]}
      rotation={[0.14, 0, 0]}
      scale={[0.18, 8.24, 12.47]}
    />
  </>
)}
{verandaWidth > 7 && (
  <>
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.PolyKanaalplaat02.geometry}
      material={materials["PolyCarbonatSheets.001"]}
      position={[Poly08_posX, 22.81, -12.83]}
      rotation={[0.14, 0, 0]}
      scale={[0.6, 0.04, 12.5]}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Ligger01.geometry}
      material={nodes.Ligger01.material}
      position={[Ligger08_posX, 21.76, -12.97]}
      rotation={[0.14, 0, 0]}
      scale={[0.18, 8.24, 12.47]}
    />
  </>
)}
<mesh
  castShadow
  receiveShadow
  geometry={nodes.PolyKanaalplaat03.geometry}
  material={materials["PolyCarbonatSheets.001"]}
  position={[-9.72, 22.81, -12.83]}
  rotation={[0.14, 0, 0]}
  scale={[0.6, 0.04, 12.5]}
  ref={Poly03}
/>
<mesh
  castShadow
  receiveShadow
  geometry={nodes.Ligger01.geometry}
  material={nodes.Ligger01.material}
  position={[4.86, 21.76, -12.97]}
  rotation={[0.14, 0, 0]}
  scale={[0.18, 8.24, 12.47]}
  ref={Ligger01}
/>
<mesh
  castShadow
  receiveShadow
  geometry={nodes.EindLiggerRechts.geometry}
  material={nodes.EindLiggerRechts.material}
  position={[14.58, 21.76, -12.97]}
  rotation={[0.14, 0, 0]}
  scale={[0.18, 8.24, 12.47]}
  ref={EindLiggerRechts}
/>
<mesh
  castShadow
  receiveShadow
  geometry={nodes.Ligger02.geometry}
  material={nodes.Ligger02.material}
  position={[-4.82, 21.76, -12.97]}
  rotation={[0.14, 0, 0]}
  scale={[0.18, 8.24, 12.47]}
  ref={Ligger02}
/>
<mesh
  castShadow
  receiveShadow
  geometry={nodes.EindLiggerLinks.geometry}
  material={nodes.EindLiggerLinks.material}
  position={[-14.58, 21.76, -12.97]}
  rotation={[0.14, 0, 0]}
  scale={[0.18, 8.24, 12.47]}
  ref={EindLiggerLinks}
/>
{legs === 0 && (
  <>
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Legs01Left.geometry}
      material={materials.Aluminium}
      position={[-14.58, 10, 0]}
      scale={[0.25, 10, 0.55]}
      ref={leftLegs}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Legs01Right.geometry}
      material={materials.Aluminium}
      position={[14.58, 10, 0]}
      scale={[0.25, 10, 0.55]}
      ref={rightLegs}
      />
  </>
)}
{legs === 1 && (
  <>
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Legs01Left.geometry}
      material={materials.Aluminium}
      position={[-14.58, 10, 0]}
      scale={[0.25, 10, 0.55]}
      ref={leftLegs}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Legs01Right.geometry}
      material={materials.Aluminium}
      position={[14.58, 10, 0]}
      scale={[0.25, 10, 0.55]}
      ref={rightLegs}
      />
  </>
)}
{legs === 2 && (
  <>
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Legs01Left.geometry}
      material={materials.Aluminium}
      position={[-14.58, 10, 0]}
      scale={[0.25, 10, 0.55]}
      ref={leftLegs}
    />
    <mesh
      castShadow
      receiveShadow
      geometry={nodes.Legs01Right.geometry}
      material={materials.Aluminium}
      position={[14.58, 10, 0]}
      scale={[0.25, 10, 0.55]}
      ref={rightLegs}
      />
  </>
)}
<group position={[8.7, 10.02, -0.38]} scale={[11.33, 9.29, 4.41]} ref={rightWindowPanel}>
  <mesh
    castShadow
    receiveShadow
    geometry={nodes.Window_Panel013.geometry}
    material={nodes.Window_Panel013.material}
  />
  <mesh
    castShadow
    receiveShadow
    geometry={nodes.Window_Panel013_1.geometry}
    material={materials.MaterialGlass}
  />
</group>
<group position={[0.02, 10.02, -0.12]} scale={[11.33, 9.29, 4.41]} ref={midWindowPanel}>
  <mesh
    castShadow
    receiveShadow
    geometry={nodes.Window_Panel012.geometry}
    material={nodes.Window_Panel012.material}
  />
  <mesh
    castShadow
    receiveShadow
    geometry={nodes.Window_Panel012_1.geometry}
    material={materials.MaterialGlass}
  />
</group>
<group position={[-8.7, 10.02, 0.17]} scale={[11.33, 9.29, 4.41]} ref={leftWindowPanel}>
  <mesh
    castShadow
    receiveShadow
    geometry={nodes.Window_Panel011.geometry}
    material={nodes.Window_Panel011.material}
  />
  <mesh
    castShadow
    receiveShadow
    geometry={nodes.Window_Panel011_1.geometry}
    material={materials.MaterialGlass}
  />
</group>
<mesh
  castShadow
  receiveShadow
  geometry={nodes.WindowFrame.geometry}
  material={nodes.WindowFrame.material}
  position={[0, 0.63, 0.15]}
  scale={[11.33, 9.01, 4.41]}
  ref={windowFrame}
/>
</group>
  );
}

useGLTF.preload("./models/BasicVeranda8.glb");
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { CubeCamera, useGLTF } from "@react-three/drei";
import React, { useEffect, useRef } from "react";
import { useConfigurator } from "../contexts/Configurator";

import { useFrame } from "@react-three/fiber";
import * as Three from "three";
import { Vector3 } from "three";

const ANIM_SPEED = 12;

export function Table(props) {
  const { nodes, materials } = useGLTF("./models/BasicVeranda2.glb");

    const { legs, legsColor, tableWidth } = useConfigurator();
    
    const plate = useRef();
    const leftLegs = useRef();
    const rightLegs = useRef();
  
    useEffect(() => {
      materials.Metal.color = new Three.Color(legsColor);
    }, [legsColor]);
  
    useFrame((_state, delta) => {
      const tableWidthScale = tableWidth / 15;
      const targetScale = new Vector3(0.15, 0.08, 15 * tableWidthScale);
      
  
      plate.current.scale.lerp(targetScale, delta * ANIM_SPEED);
  
      const targetLeftPosition = new Vector3(-14.72 * tableWidthScale, 5, -0.07);
      leftLegs.current.position.lerp(targetLeftPosition, delta * ANIM_SPEED);
  
      const targetRightPosition = new Vector3(14.74 * tableWidthScale, 5, -0.07);
      rightLegs.current.position.lerp(targetRightPosition, delta * ANIM_SPEED);
    });

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plate.geometry}
        material={nodes.Plate.material}
        position={[0, 10, 0]}
        rotation={[0, -Math.PI / 2, 0]}
        scale={[0.15, 0.08, 15]}
        ref={plate}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane003.geometry}
        material={nodes.Plane003.material}
        position={[0, 14.29, -29.79]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[15, 1, 0.18]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Poly_kanaalplaat001.geometry}
        material={materials["PolyCarbonatSheets.001"]}
        position={[7.07, 12.06, -15]}
        rotation={[0.14, 0, 0]}
        scale={[0.6, 0.04, 15]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Poly_kanaalplaat002.geometry}
        material={materials["PolyCarbonatSheets.001"]}
        position={[-2.83, 12.06, -15]}
        rotation={[0.14, 0, 0]}
        scale={[0.6, 0.04, 15]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Poly_kanaalplaat003.geometry}
        material={materials["PolyCarbonatSheets.001"]}
        position={[-12.65, 12.06, -15]}
        rotation={[0.14, 0, 0]}
        scale={[0.6, 0.04, 15]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane004.geometry}
        material={nodes.Plane004.material}
        position={[5.15, 12.06, -15]}
        rotation={[0.14, 0, 0]}
        scale={[0.18, 1.58, 14.97]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane005.geometry}
        material={nodes.Plane005.material}
        position={[14.8, 11.87, -14.9]}
        rotation={[0.14, 0, 0]}
        scale={[0.18, 1.58, 14.97]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane006.geometry}
        material={nodes.Plane006.material}
        position={[-4.69, 12.06, -15]}
        rotation={[0.14, 0, 0]}
        scale={[0.18, 1.58, 14.97]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane007.geometry}
        material={nodes.Plane007.material}
        position={[-14.75, 12.01, -14.78]}
        rotation={[0.14, 0, 0]}
        scale={[0.18, 1.58, 14.97]}
      />
      {legs === 0 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Left.geometry}
            material={materials.Metal}
            position={[-14.72, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={leftLegs}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Right.geometry}
            material={materials.Metal}
            position={[14.74, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={rightLegs}
          />
        </>
      )}
      {legs === 1 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Left.geometry}
            material={materials.Metal}
            position={[-14.72, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={leftLegs}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Right.geometry}
            material={materials.Metal}
            position={[14.74, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={rightLegs}
          />
        </>
      )}
      {legs === 2 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Left.geometry}
            material={materials.Metal}
            position={[-14.72, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={leftLegs}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Right.geometry}
            material={materials.Metal}
            position={[14.74, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={rightLegs}
          />
        </>
      )}
    </group>
  );
}

useGLTF.preload("./models/BasicVeranda2.glb");
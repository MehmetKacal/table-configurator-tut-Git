/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { CubeCamera, useGLTF } from "@react-three/drei";
import React, { useEffect, useRef } from "react";
import { useConfigurator } from "../contexts/Configurator";

import { useFrame } from "@react-three/fiber";
import * as Three from "three";
import { Vector3 } from "three";

const ANIM_SPEED = 12;

export function Table(props) {
  const { nodes, materials } = useGLTF("./models/BasicVeranda3.glb");

    const { legs, legsColor, tableWidth } = useConfigurator();
    
    const GootProfiel = useRef();
    const leftLegs = useRef();
    const rightLegs = useRef();
    const Poly01 = useRef();
    const Poly02 = useRef();
    const Poly03 = useRef();
    
    var tableWidthBase = 3
    var Poly04_posX = -2.83 + ((tableWidth/3-1)*-14.72) + 9.72
    var Poly05_posX = -2.83 + ((tableWidth/3-1)*-14.72) + 9.72 * 2
    var Poly06_posX = -2.83 + ((tableWidth/3-1)*-14.72) + 9.72 * 3
    var Poly07_posX = -2.83 + ((tableWidth/3-1)*-14.72) + 9.72 * 4
    var Poly08_posX = -2.83 + ((tableWidth/3-1)*-14.72) + 9.72 * 5

    useEffect(() => {
      materials.Metal.color = new Three.Color(legsColor);
    }, [legsColor]);
  
    useFrame((_state, delta) => {
      const tableWidthScale = tableWidth / tableWidthBase;


      const targetScale = new Vector3(0.15, 0.08, 15 * tableWidthScale);
      
  
      GootProfiel.current.scale.lerp(targetScale, delta * ANIM_SPEED);
  
      const targetLeftPosition = new Vector3(-14.72 * tableWidthScale, 5, -0.07);
      leftLegs.current.position.lerp(targetLeftPosition, delta * ANIM_SPEED);
  
      const targetRightPosition = new Vector3(14.74 * tableWidthScale, 5, -0.07);
      rightLegs.current.position.lerp(targetRightPosition, delta * ANIM_SPEED);

      const Poly01Position = new Vector3(7.07 + ((tableWidthScale-1)*14.74), 12.06, -15);
      Poly01.current.position.lerp(Poly01Position, delta * ANIM_SPEED);
      const Poly02Position = new Vector3(-2.83 + ((tableWidthScale-1)*-14.72), 12.06, -15);
      Poly02.current.position.lerp(Poly02Position, delta * ANIM_SPEED);
      const Poly03Position = new Vector3(-12.65 + ((tableWidthScale-1)*-14.72), 12.06, -15);
      Poly03.current.position.lerp(Poly03Position, delta * ANIM_SPEED);

      // const Poly04Position = new Vector3(-2.83 + ((tableWidthScale-1)*-14.72), 12.06, -15);
      // Poly04.current.position.lerp(Poly04Position, delta * ANIM_SPEED);
    });

    

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.GootProfiel.geometry}
        material={nodes.GootProfiel.material}
        position={[0, 10, 0]}
        rotation={[0, -Math.PI / 2, 0]}
        scale={[0.15, 0.08, 15]}
        ref={GootProfiel}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Huis.geometry}
        material={nodes.Huis.material}
        position={[0, 14.29, -29.79]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[15, 1, 0.18]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.PolyKanaalplaat01.geometry}
        material={materials["PolyCarbonatSheets.001"]}
        position={[7.07, 12.06, -15]}
        rotation={[0.14, 0, 0]}
        scale={[0.6, 0.04, 15]}
        ref={Poly01}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.PolyKanaalplaat02.geometry}
        material={materials["PolyCarbonatSheets.001"]}
        position={[-2.83, 12.06, -15]}
        rotation={[0.14, 0, 0]}
        scale={[0.6, 0.04, 15]}
        ref={Poly02}
      />
      {tableWidth > 3 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.PolyKanaalplaat02.geometry}
            material={materials["PolyCarbonatSheets.001"]}
            position={[Poly04_posX, 12.06, -15]}
            rotation={[0.14, 0, 0]}
            scale={[0.6, 0.04, 15]}
            // ref={Poly04}
          />
        </>
    )}
      {tableWidth > 4 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.PolyKanaalplaat02.geometry}
            material={materials["PolyCarbonatSheets.001"]}
            position={[Poly05_posX, 12.06, -15]}
            rotation={[0.14, 0, 0]}
            scale={[0.6, 0.04, 15]}
            // ref={Poly04}
          />
        </>
    )}
      {tableWidth > 5 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.PolyKanaalplaat02.geometry}
            material={materials["PolyCarbonatSheets.001"]}
            position={[Poly06_posX, 12.06, -15]}
            rotation={[0.14, 0, 0]}
            scale={[0.6, 0.04, 15]}
            // ref={Poly04}
          />
        </>
    )}
      {tableWidth > 6 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.PolyKanaalplaat02.geometry}
            material={materials["PolyCarbonatSheets.001"]}
            position={[Poly07_posX, 12.06, -15]}
            rotation={[0.14, 0, 0]}
            scale={[0.6, 0.04, 15]}
            // ref={Poly04}
          />
        </>
    )}
      {tableWidth > 7 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.PolyKanaalplaat02.geometry}
            material={materials["PolyCarbonatSheets.001"]}
            position={[Poly08_posX, 12.06, -15]}
            rotation={[0.14, 0, 0]}
            scale={[0.6, 0.04, 15]}
            // ref={Poly04}
          />
        </>
    )}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.PolyKanaalplaat03.geometry}
        material={materials["PolyCarbonatSheets.001"]}
        position={[-12.65, 12.06, -15]}
        rotation={[0.14, 0, 0]}
        scale={[0.6, 0.04, 15]}
        ref={Poly03}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Ligger01.geometry}
        material={nodes.Ligger01.material}
        position={[5.15, 12.06, -15]}
        rotation={[0.14, 0, 0]}
        scale={[0.18, 1.58, 14.97]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.EindLiggerRechts.geometry}
        material={nodes.EindLiggerRechts.material}
        position={[14.8, 11.87, -14.9]}
        rotation={[0.14, 0, 0]}
        scale={[0.18, 1.58, 14.97]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Ligger02.geometry}
        material={nodes.Ligger02.material}
        position={[-4.69, 12.06, -15]}
        rotation={[0.14, 0, 0]}
        scale={[0.18, 1.58, 14.97]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.EindLiggerLinks.geometry}
        material={nodes.EindLiggerLinks.material}
        position={[-14.75, 12.01, -14.78]}
        rotation={[0.14, 0, 0]}
        scale={[0.18, 1.58, 14.97]}
      />
      {legs === 0 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Left.geometry}
            material={materials.Metal}
            position={[-14.72, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={leftLegs}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Right.geometry}
            material={materials.Metal}
            position={[14.74, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={rightLegs}
            />
        </>
    )}
      {legs === 1 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Left.geometry}
            material={materials.Metal}
            position={[-14.72, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={leftLegs}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Right.geometry}
            material={materials.Metal}
            position={[14.74, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={rightLegs}
            />
        </>
    )}
      {legs === 2 && (
        <>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Left.geometry}
            material={materials.Metal}
            position={[-14.72, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={leftLegs}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Legs01Right.geometry}
            material={materials.Metal}
            position={[14.74, 5, -0.07]}
            scale={[0.25, 5, 0.3]}
            ref={rightLegs}
            />
        </>
    )}
    </group>
  );
}

useGLTF.preload("./models/BasicVeranda3.glb");